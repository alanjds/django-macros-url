{"name":"Django-macros-url","tagline":"Django Macros Url. Routing must be simple as possible","body":"# [Django Macros Url](https://github.com/phpdude/django-macros-url/) v0.2.0 - Routing must be simple as possible\r\n\r\nDjango Macros Url makes it easy to write (and read) url patterns in your django applications by using macros.\r\n\r\nYou can combine your prefixes with macro names with underscore, for example you can use macro `:slug` and `:product_slug`. They both will be compiled to same regex pattern with their group names of course. Multiple underscores accepted too.\r\n\r\n[![Build Status](https://travis-ci.org/phpdude/django-macros-url.svg?branch=master)](https://travis-ci.org/phpdude/django-macros-url)\r\n\r\n### Supported macros by default\r\n\r\n```\r\nslug - [\\w-]+\r\nyear - \\d{4}\r\nmonth - (0?([1-9])|10|11|12)\r\nday - ((0|1|2)?([1-9])|[1-3]0|31)\r\nid - \\d+\r\npk - \\d+\r\nuuid - [a-fA-F0-9]{8}-?[a-fA-F0-9]{4}-?[1345][a-fA-F0-9]{3}-?[a-fA-F0-9]{4}-?[a-fA-F0-9]{12}\r\n```\r\n\r\nIf you want to offer more macros by default, you can fork and make pull request.\r\n\r\n### Installation\r\n\r\nYou can install library with pypi like a charm.\r\n\r\n```\r\npip install django-macros-url\r\n```\r\n\r\n### Usage\r\n\r\nDjango Macros Urls used same way as django standart urls. You just import this and declare your patterns with macros.\r\n\r\nAlso you can register new macro (or maybe you want to replace default macro with your like regex pattern) with `macrosurl.register(macro, pattern)` method.\r\n\r\nExample of registration.\r\n\r\n```python\r\nimport macrosurl\r\n\r\nmacrosurl.register('myhash', '[a-f0-9]{9}')\r\n\r\nurlpatterns = patterns(\r\n    'yourapp.views',\r\n    macrosurl.url('^:myhash/$', 'myhash_main'),\r\n    macrosurl.url('^news/:news_myhash/$', 'myhash_news'),\r\n)\r\n```\r\n\r\nYou free to register custom macro anywhere (i do it in main urls.py file). Macros Urls uses lazy initiazation. Macros will be compiled only on first request.\r\n\r\n### Urls normalization\r\n\r\nOnce Macros Url finished compile regex pattern, it makes normalization of it by rules:\r\n\r\n- Strip from left side all whitespace and ^\r\n- Strip from right side of pattern all whitespace and $\r\n- Add to left side ^\r\n- Add to right side $\r\n\r\nThis makes your urls always very strong to adding any unexpected params into path.\r\n\r\n### Auto-calling as_view on CBV objects.\r\n\r\nLibrary check type of view and if view is type object with defined 'as_view' function, call this. This allow \r\nyou omit \".as_view()\" calls in your urls.py files. But you can call this manual with params if you need.\r\n\r\nThis feature help you to keep your urls.py files must clean as possible. I hope you like this feature!\r\n\r\n### Examples\r\n\r\nMacro Url example urls.py file\r\n\r\n```python\r\nfrom django.conf.urls import patterns\r\nfrom macrosurl import url\r\nfrom project.portal.views import IndexView\r\n\r\nurlpatterns = patterns(\r\n    'yourapp.views',\r\n    url('^:category_slug/$', 'category'),\r\n    url(':category_slug/:product_slug/', 'category_product'),\r\n    url(':category_slug/:product_slug/:variant_id', 'category_product_variant'),\r\n    url('news/', 'news'),\r\n    url('news/:year/:month/:day', 'news_date'),\r\n    url('news/:slug', 'news_entry'),\r\n    url('^order/:id$', 'order'),\r\n    url('^$', IndexView),\r\n)\r\n```\r\n\r\nDjango way urls example\r\n\r\n```python\r\nfrom django.conf.urls import patterns\r\nfrom macrosurl import url\r\nfrom project.portal.views import IndexView\r\n\r\n\r\nurlpatterns = patterns(\r\n    'yourapp.views',\r\n    url('^(?P<category_slug>[\\w-]+>)/$', 'category'),\r\n    url('^(?P<category_slug>[\\w-]+>)/(?P<product_slug>[\\w-]+>)/$', 'category_product'),\r\n    url('^(?P<category_slug>[\\w-]+>)/(?P<product_slug>[\\w-]+>)/(?P<variant_id>\\d+>)$', 'category_product_variant'),\r\n    url('^news/$', 'news'),\r\n    url('^news/(?P<year>\\d{4}>)/(?P<month>(0?([1-9])|10|11|12)>)/(?P<day>((0|1|2)?([1-9])|[1-3]0|31)>)$', 'news_date'),\r\n    url('^news/(?P<slug>[\\w-]+>)$', 'news_entry'),\r\n    url('^order/(?P<id>\\d+>)$', 'order'),\r\n    url('^$', IndexView.as_view()),\r\n)\r\n```\r\n\r\nI think you understand the difference of ways :)\r\n\r\n#### Routing must be simple! ;-)\r\n\r\nI think real raw url regexp patterns needed in 1% case only. Prefer simple way to write (and read, this is important) fancy clean urls.\r\n\r\n### Contributor\r\n\r\nAlexandr Shurigin (aka [phpdude](https://github.com/phpdude/))\r\n\r\n### Additionals\r\n\r\nSorry for my english level :(\r\n\r\nYou are welcome fix readme to good english by pull request! Thank you.","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}